//
//  QSTopicDetailPresenter.swift
//  zhuishushenqi
//
//  Created yung on 2017/4/20.
//  Copyright © 2017年 QS. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class QSTopicDetailPresenter: QSTopicDetailPresenterProtocol {

    weak var view: QSTopicDetailViewProtocol?
    let interactor: QSTopicDetailInteractorProtocol
    let router: QSTopicDetailWireframeProtocol

    init(interface: QSTopicDetailViewProtocol, interactor: QSTopicDetailInteractorProtocol, router: QSTopicDetailWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func viewDidLoad(){
        interactor.requestDetail()
        interactor.showTitle()
        view?.showActivityView()
    }
    
    func didSelectAt(indexPath:IndexPath,models:[TopicDetailModel]){
        router.presentDetail(indexPath: indexPath, models: models)
    }
    
}

extension QSTopicDetailPresenter:QSTopicDetailInteractorOutputProtocol{
    func fetchListSuccess(list: [TopicDetailModel], header: TopicDetailHeader) {
        view?.hideActivityView()
        view?.showList(list: list, header: header)
    }
    
    func fetchListFailed() {
        view?.hideActivityView()
    }
    
    func showTitle(title:String){
        view?.showTitle(title: title)
    }
}
