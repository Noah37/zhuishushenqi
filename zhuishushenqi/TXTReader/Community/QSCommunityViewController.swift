//
//  QSCommunityViewController.swift
//  zhuishushenqi
//
//  Created yung on 2017/4/24.
//  Copyright © 2017年 QS. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class QSCommunityViewController: UIViewController, QSCommunityViewProtocol,UITableViewDataSource,UITableViewDelegate ,Refreshable{

	var presenter: QSCommunityPresenterProtocol?
    
    var discusses:[BookComment] = []
    var comments:[BookComment] = []
    var selectedIndex = 0

    lazy var tableView:UITableView = {
        let tableView = UITableView(frame: CGRect(x: 0, y: kNavgationBarHeight + 40, width: ScreenWidth, height: ScreenHeight - kNavgationBarHeight - 40), style: .grouped)
        tableView.dataSource = self
        tableView.delegate = self
        tableView.separatorStyle = .singleLine
        tableView.qs_registerCellNib(QSDiscussCell.self)
        tableView.qs_registerCellNib(HotCommentCell.self)
        tableView.backgroundColor = UIColor(red: 0.95, green: 0.95, blue: 0.95, alpha: 1.0)
        return tableView
    }()
    
	override func viewDidLoad() {
        super.viewDidLoad()
        
        initRefreshHeader(tableView) {
            if self.selectedIndex == 0{
                self.presenter?.refreshData()
            }else {
                self.presenter?.refreshComments()
            }
        }
        
        initRefreshFooter(tableView) {
            if self.selectedIndex == 0{
                self.presenter?.requestMore()
            }else{
                self.presenter?.requestMoreComments()
            }
        }
        setupSubviews()
        presenter?.viewDidLoad()
    }
    
    func setupSubviews(){
        let segment = UISegmentedControl(frame: CGRect(x: self.view.bounds.width/4, y: kNavgationBarHeight + 5, width: self.view.bounds.width/2, height: 30))
        
        segment.insertSegment(withTitle: "讨论", at: 0, animated: false)
        segment.insertSegment(withTitle: "书评", at: 1, animated: false)
        segment.selectedSegmentIndex = 0
        segment.tintColor = UIColor.red
        segment.backgroundColor = UIColor.white
        segment.addTarget(self, action: #selector(segmentAction(seg:)), for: .valueChanged)
        self.view.backgroundColor = UIColor(red: 0.95, green: 0.95, blue: 0.95, alpha: 1.0)
        self.view.addSubview(segment)
        self.view.addSubview(tableView)
        self.automaticallyAdjustsScrollViewInsets = false
    }
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        if selectedIndex == 0{
            return discusses.count
        }
        return comments.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if  selectedIndex == 0{
            let cell = tableView.qs_dequeueReusableCell(QSDiscussCell.self)
            cell?.model = discusses[indexPath.row]
            return cell!
        }else{
            let cell = tableView.qs_dequeueReusableCell(HotCommentCell.self)
            cell?.model = comments[indexPath.row]
            cell?.backgroundColor = UIColor(red: 0.95, green: 0.95, blue: 0.95, alpha: 1.0)
            return cell!
        }
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        if selectedIndex == 0{
            return 70
        }else {
            return 127
        }
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 0.001
    }
    
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return 0.001
    }
    
    @objc func segmentAction(seg:UISegmentedControl){
        if selectedIndex == seg.selectedSegmentIndex {
            return
        }
        selectedIndex = seg.selectedSegmentIndex
        if selectedIndex == 0{
            if discusses.count == 0 {
                self.presenter?.refreshData()
            }
        }else if selectedIndex == 1 {
            if comments.count == 0 {
                self.presenter?.refreshComments()
            }
        }
        tableView.reloadData()
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
        presenter?.didSelectCell(indexPath: indexPath)
    }

    func showPosts(posts: [BookComment]) {
        self.discusses = posts
        self.tableView.mj_header.endRefreshing()
        self.tableView.mj_footer.endRefreshing()
        self.tableView.reloadData()
    }
    
    func showComments(comments: [BookComment]) {
        self.comments = comments
        self.tableView.mj_header.endRefreshing()
        self.tableView.mj_footer.endRefreshing()
        self.tableView.reloadData()
    }
    
    func showEmpty() {
        self.tableView.mj_header.endRefreshing()
        self.tableView.mj_footer.endRefreshing()
    }
    
    func showTitle(title: String) {
        self.title = title
    }
}
