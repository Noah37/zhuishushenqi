//
//  QSBookCommentPresenter.swift
//  zhuishushenqi
//
//  Created yung on 2017/4/24.
//  Copyright © 2017年 QS. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class QSBookCommentPresenter: QSBookCommentPresenterProtocol {

    weak var view: QSBookCommentViewProtocol?
    let interactor: QSBookCommentInteractorProtocol
    let router: QSBookCommentWireframeProtocol

    init(interface: QSBookCommentViewProtocol, interactor: QSBookCommentInteractorProtocol, router: QSBookCommentWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func viewDidLoad() {
        interactor.requestDetail()
        interactor.requestHot()
        interactor.requestNormal()
        view?.showActivityView()
    }
    
    func requestMore() {
        view?.showActivityView()
        interactor.requestNormal()
    }
}

extension QSBookCommentPresenter:QSBookCommentInteractorOutputProtocol{
    func fetchDetailSuccess(detail: BookComment) {
        view?.hideActivityView()
        view?.showDetail(detail: detail)
    }
    
    func fetchDetailFailed() {
        view?.hideActivityView()
    }
    
    func fetchHotSuccess(hots: [BookCommentDetail]) {
        view?.hideActivityView()
        view?.showHot(hots: hots)
    }
    
    func fetchHotFailed() {
        view?.hideActivityView()

    }
    
    func fetchNormalSuccess(normals: [BookCommentDetail]) {
        view?.hideActivityView()
        view?.showNormal(normals: normals)
    }
    
    func fetchNormalFailed() {
        view?.hideActivityView()
    }
}
